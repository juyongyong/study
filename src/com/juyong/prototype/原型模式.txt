原型模式
1.原型模式(Prototype模式)是指，用原型实例指定创建对象的种类，并且通过拷贝这些原型，创建新的对象。
2.原型模式是一种创建型设计模式，允许一个对象再创建另外一个可定制的对象，无需知道如何创建的细节。
3.工作原理是通过将一个原型对象传给那个要发动创建的对象，这个要发动创建的对象通过请求原型对象拷贝
它们来实施创建，即对象.clone()。
4.形象的理解：孙大圣拔出猴毛，编出其他的孙大圣。

浅拷贝的介绍
1.对于数据类型是基本数据类型的成员变量，浅拷贝会直接进行值传递，也就是将该属性值复制一份
给新的对象。
2.对于数据类型是引用数据类型的成员变量，比如说成员变量是某个数组，某个类的对象等，那么浅拷贝
会进行引用传递，也就是只将该变量的引用值(内存地址)复制一份给新的对象。因为实际上两个对象的该
成员变量都指向同一个实例。在这种情况下，在一个对象中修改该成员变量会影响另一个对象的该成员变量。
3.浅拷贝是使用默认的clone()方法来实现的。

深拷贝介绍
1.复制对象的所有基本数据类型的成员变量值。
2.为所有引用数据类型的成员变量申请存储空间，并复制每个引用的数据类型成员变量所引用的对象，直到
该对象可达的所有对象。也就是说，对象进行深拷贝要对整个对象进行拷贝
3.深拷贝的实现方式一：重写clone方法来实现深拷贝。
4.深拷贝的实现方式二：通过对象序列化来实现深拷贝。
